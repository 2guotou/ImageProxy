proxy_cache_path  /path/to/proxy/cache levels=1:2 keys_zone=cache_one:50m inactive=30d max_size=2g;

server{
	listen 80;
	server_name  proxy.x.com  your.cdn.x.com;
	root /path/to/project/images;

	client_body_buffer_size     512k;
	proxy_connect_timeout          5;
	proxy_read_timeout            60;
	proxy_send_timeout             5;
	proxy_buffer_size            16k;
	proxy_buffers              4 64k;
	proxy_busy_buffers_size     128k;
	proxy_temp_file_write_size  128k;

	# 注：proxy_temp_path和proxy_cache_path指定的路径必须在同一分区
	# 设置Web缓存区名称为cache_one，内存缓存空间大小为50MB，
	# 1天没有被访问的内容自动清除，硬盘缓存空间大小为1GB。
	proxy_temp_path  /path/to/proxy/temp;
	
	#发生415的图片资源，均使用默认图片
	error_page 415 =200 /prject-default.png;

	location /imgp/ {
		set $hostx ' ';
		set $addrx ' ';
		set $refer ' ';
		
		# 示例 imgp/origin.com/path/to/a.png||base64String
		# 其中 base64String 为原网页的地址的base64结果字符串
		if ($uri ~ '^/imgp/([^/]+)/(.+?)\|\|(.+)$') {
			set $hostx $1;
			set $addrx $2;
			set $refer $3;
		}
		
		# 注意: resolver提供的DNS解析非常重要,否则无法完成$hostx的解析
		# resolver 222.222.222.222;
		resolver 8.8.4.4;
		proxy_cache cache_one;
		proxy_cache_valid 200 304 12h;
		
		# 以域名、URI、参数组合成Web缓存的Key值，
		# Nginx根据Key值哈希，存储缓存内容到二级缓存目录内
		proxy_cache_key $hostx$uri$is_args$args;

		#proxy_set_header  Host $hostx;
		#proxy_set_header  X-Forwarded-For  $remote_addr;
		proxy_set_header   Referer  $base64_decode_refer;
		if ( !-e $request_filename ) {
			proxy_pass http://$hostx/$addrx;
		}
    
    # 定制裁剪规则，你可以自行完成自己理想的裁剪方案，具体参考 image_filter 模块
    image_filter_buffer 5m;
		image_filter_interlace on;
		image_filter resize 480 -;#此处统一裁剪为 480x* 的图片
		expires 30d;
	}
}
